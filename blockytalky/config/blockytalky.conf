# Phoenix System config that probably does not need to be changed
blockytalky.Elixir.Blockytalky.Endpoint.url.host = "localhost"
blockytalky.Elixir.Blockytalky.Endpoint.root = "/opt/blockytalky"
blockytalky.Elixir.Blockytalky.Endpoint.secret_key_base = "Kr/XoPRzKE/LIrVn2ugw8mtnkftj3C83hhELSbR49ZXM1HkljuB7rUTlOOX8e9zT"
blockytalky.Elixir.Blockytalky.Endpoint.debug_errors = false
blockytalky.Elixir.Blockytalky.Endpoint.pubsub.name = Elixir.Blockytalky.PubSub
blockytalky.Elixir.Blockytalky.Endpoint.pubsub.adapter = Elixir.Phoenix.PubSub.PG2
blockytalky.Elixir.Blockytalky.Endpoint.http.port = 80
blockytalky.Elixir.Blockytalky.Endpoint.cache_static_manifest = "priv/static/manifest.json"

# run the Endpoint server (phoenix.server) without the mix command, needed for release
blockytalky.Elixir.Blockytalky.Endpoint.server = true
# the location of the remote dax ws server for BT communication
blockytalky.dax = "ws://btrouter.getdown.org:8005/dax"
# whether we want music blocks (sonic pi must be running when bt runs)
blockytalky.music = true

# The port BT will accept UDP messages from Sonic Pi from.
blockytalky.music_port = 9090

# The amount of time (in ms) that bt should poll and run the usercode loop.
blockytalky.update_rate = 30

# The amount of time that bt should poll when not running usercode.
blockytalky.update_rate_hibernate = 100

# comma separated list of python hw modules + block currently supported.
#blockytalky.supported_hardware = mock, btbrickpi, btgrovepi
blockytalky.supported_hardware = btbrickpi

#the directory where usercode (json of xml and dsl code)
blockytalky.user_code_dir = "/opt/blockytalky/usercode"

# Ecto Repo (DB) stuff, probably does not need to change, currently unused.
blockytalky.Elixir.Blockytalky.Repo.adapter = Elixir.Ecto.Adapters.Postgres
blockytalky.Elixir.Blockytalky.Repo.username = "postgres"
blockytalky.Elixir.Blockytalky.Repo.password = "postgres"
blockytalky.Elixir.Blockytalky.Repo.database = "blockytalky_prod"
blockytalky.Elixir.Blockytalky.Repo.size = 20

logger.console.format = "$time $metadata[$level] $message
"
logger.console.metadata = request_id
logger.level = info
logger.backends = Elixir.Logger.Backends.Syslog, console
logger.syslog.facility = local2
logger.syslog.appid = "BlockyTalky"
